<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.allcheer.bpos.mapper.TblAiLoginUsrDoMapper" >
  <resultMap id="BaseResultMap" type="com.allcheer.bpos.entity.TblAiLoginUsrDo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="LOGIN_USR" property="loginUsr" jdbcType="VARCHAR" />
    <result column="LOGIN_USR_TYPE" property="loginUsrType" jdbcType="CHAR" />
    <result column="AGENT_ID" property="agentId" jdbcType="VARCHAR" />
    <result column="INST_ID" property="instId" jdbcType="VARCHAR" />
    <result column="MER_ID" property="merId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    LOGIN_USR, LOGIN_USR_TYPE, AGENT_ID, INST_ID, MER_ID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.allcheer.bpos.entity.TblAiLoginUsrDoExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from TBL_AI_LOGIN_USR
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from TBL_AI_LOGIN_USR
    where LOGIN_USR = #{loginUsr,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from TBL_AI_LOGIN_USR
    where LOGIN_USR = #{loginUsr,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.allcheer.bpos.entity.TblAiLoginUsrDoExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from TBL_AI_LOGIN_USR
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.allcheer.bpos.entity.TblAiLoginUsrDo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into TBL_AI_LOGIN_USR (LOGIN_USR, LOGIN_USR_TYPE, AGENT_ID, 
      INST_ID, MER_ID)
    values (#{loginUsr,jdbcType=VARCHAR}, #{loginUsrType,jdbcType=CHAR}, #{agentId,jdbcType=VARCHAR}, 
      #{instId,jdbcType=VARCHAR}, #{merId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.allcheer.bpos.entity.TblAiLoginUsrDo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into TBL_AI_LOGIN_USR
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="loginUsr != null" >
        LOGIN_USR,
      </if>
      <if test="loginUsrType != null" >
        LOGIN_USR_TYPE,
      </if>
      <if test="agentId != null" >
        AGENT_ID,
      </if>
      <if test="instId != null" >
        INST_ID,
      </if>
      <if test="merId != null" >
        MER_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="loginUsr != null" >
        #{loginUsr,jdbcType=VARCHAR},
      </if>
      <if test="loginUsrType != null" >
        #{loginUsrType,jdbcType=CHAR},
      </if>
      <if test="agentId != null" >
        #{agentId,jdbcType=VARCHAR},
      </if>
      <if test="instId != null" >
        #{instId,jdbcType=VARCHAR},
      </if>
      <if test="merId != null" >
        #{merId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.allcheer.bpos.entity.TblAiLoginUsrDoExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from TBL_AI_LOGIN_USR
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update TBL_AI_LOGIN_USR
    <set >
      <if test="record.loginUsr != null" >
        LOGIN_USR = #{record.loginUsr,jdbcType=VARCHAR},
      </if>
      <if test="record.loginUsrType != null" >
        LOGIN_USR_TYPE = #{record.loginUsrType,jdbcType=CHAR},
      </if>
      <if test="record.agentId != null" >
        AGENT_ID = #{record.agentId,jdbcType=VARCHAR},
      </if>
      <if test="record.instId != null" >
        INST_ID = #{record.instId,jdbcType=VARCHAR},
      </if>
      <if test="record.merId != null" >
        MER_ID = #{record.merId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update TBL_AI_LOGIN_USR
    set LOGIN_USR = #{record.loginUsr,jdbcType=VARCHAR},
      LOGIN_USR_TYPE = #{record.loginUsrType,jdbcType=CHAR},
      AGENT_ID = #{record.agentId,jdbcType=VARCHAR},
      INST_ID = #{record.instId,jdbcType=VARCHAR},
      MER_ID = #{record.merId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.allcheer.bpos.entity.TblAiLoginUsrDo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update TBL_AI_LOGIN_USR
    <set >
      <if test="loginUsrType != null" >
        LOGIN_USR_TYPE = #{loginUsrType,jdbcType=CHAR},
      </if>
      <if test="agentId != null" >
        AGENT_ID = #{agentId,jdbcType=VARCHAR},
      </if>
      <if test="instId != null" >
        INST_ID = #{instId,jdbcType=VARCHAR},
      </if>
      <if test="merId != null" >
        MER_ID = #{merId,jdbcType=VARCHAR},
      </if>
    </set>
    where LOGIN_USR = #{loginUsr,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.allcheer.bpos.entity.TblAiLoginUsrDo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update TBL_AI_LOGIN_USR
    set LOGIN_USR_TYPE = #{loginUsrType,jdbcType=CHAR},
      AGENT_ID = #{agentId,jdbcType=VARCHAR},
      INST_ID = #{instId,jdbcType=VARCHAR},
      MER_ID = #{merId,jdbcType=VARCHAR}
    where LOGIN_USR = #{loginUsr,jdbcType=VARCHAR}
  </update>
</mapper>